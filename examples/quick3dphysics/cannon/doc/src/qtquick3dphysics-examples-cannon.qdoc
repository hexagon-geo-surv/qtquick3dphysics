/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of Qt Quick 3D Physics.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example cannon
    \ingroup quick3dphysics-examples
    \title Qt Quick 3D Physics - Cannon Example
    \brief Demonstrates how to spawn physical objects.
    \image cannon-example.jpg

    This example demonstrates how to create and delete physical objects on demand.
    The scene consists of a number of stacks of boxes.
    You can move around by using \c WASD and the mouse and shoot a ball by pressing \c space.

    The scene is setup with the usual Qt Quick 3D objects like view, camera and light:

    \snippet cannon/main.qml camera

    \snippet cannon/main.qml light

    We also add a static floor:

    \snippet cannon/main.qml floor

    We create a Node we use as the spawner of objects and put inside our view:

    \snippet cannon/main.qml spawner

    We have three methods: \c createStack for creating a stack, \c createBall for creating a ball with velocity and \c reset for resetting the scene.
    The actual box and sphere that is spawn is stored in their own qml files (\c box.qml and \c sphere.qml).

*/
