/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtquick3dphysics-units.html
\title Qt Quick 3D Physics Units
\brief An explanation of how Qt Quick 3D Physics handles units and dimensions.

When simulating physical objects you need to define a common frame of reference for all physical units. In Qt Quick 3D Physics all types are unit-less meaning you can define your world in centimeters, meters, inches or whatever you prefer as long as you are consistent. The important part is that all values used are based on the same units.

\section1 Default units

Despite the module being unit-less all physical properties have default values that are based on centimeters. This means that adding a sphere with diameter \c 1 would make it behave like it was \c 1 cm in diameter. To be compatible with Qt Quick 3D the default sizes of the built-in geometries are \c 100 cm. The default gravity is \c 981 which matches the gravity on earth in cm per square-second. The default density is \c 0.001 kilograms per cubic-centimeters i.e. \c 1000 kilogram per cubic-meter which is the density of fresh water at \c 4 Â°C.

\section1 Custom units

Using custom units is possible but you need to make sure all relevant properties are updated accordingly. Below is a table of the default properties adjusted for a meter based scale:

\table
\header
    \li Property
    \li Value
\row
    \li \l {DynamicsWorld::} {gravity}
    \li \c 9.81
\row
    \li \l {DynamicsWorld::} {typicalLength}
    \li \c 1
\row
    \li \l {DynamicsWorld::} {typicalSpeed}
    \li \c 10
\row
    \li \l {DynamicRigidBody::} {density}
    \li \c 1000
\endtable

Obviously, all the positions and dimensions of objects need to be adjusted as well as any impulses and forces.

*/
